width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Total Mitochondrial Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Total Mitochondrial \n Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Mitochondrial Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Mitochondrial \n","Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Mitochondrial \n","Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = as.list(expression(paste("Mitochondrial")),expression(paste("Cholesterol Content, ",mu,"M"))), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = as.list(paste("Mitochondrial"), expression(paste("Cholesterol Content, ",mu,"M"))), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Mitochondrial Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Mitochondrial Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
ggsave(here("figures","mitochondrial_assay","mito_chol.jpg"), dpi = 300, width = 10, height = 8)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Mitochondrial Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 23)) +
ylim(0, 24)
ggsave(here("figures","mitochondrial_assay","mito_chol.jpg"), dpi = 300, width = 10, height = 8)
ggsave(here("figures","mitochondrial_assay","mito_chol.jpg"), dpi = 300, width = 10, height = 8)
ggsave(here("figures","mitochondrial_assay","mito_chol.jpg"), dpi = 300, width = 10, height = 9)
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Mitochondrial Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(21,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 24)) +
ylim(0, 24)
# ANOVA
anova <- aov(apoe_pg_ml ~ treatment, data = apoe.assay.protein_reorder_1)
## Packages
if(!any(rownames(installed.packages()) == "pacman")){
install.packages("pacman")
}
pacman::p_load(here,
tidyverse,
multcomp,
multcompView,
DT,
forcats,
ggtext,
pals,
emmeans,
kableExtra,
broom,
insight,
ggpubr,
stringr,
DescTools)
## Load RData
load(here("rdata","apoe_tidy.rdata"))
## As Factor and reoder, and assign name rename
apoe.assay.protein$treatment <- factor(apoe.assay.protein$treatment, levels = c("no_treat", "AbO", "Chol", "Fru","LPS", "AbO_Chol","AbO_Fru", "AbO_LPS", "Chol_LPS", "Fru_Chol","Fru_LPS", "AbO_Chol_LPS","Ab_F_C_LPS"))
## New Dataframe reordered
apoe.assay.protein_reorder <- apoe.assay.protein[order(apoe.assay.protein$treatment), ]
## Assign Names to Levels
levels(apoe.assay.protein_reorder$treatment) <- list(Control  = "no_treat",
AβO = "AbO",
Cholesterol = "Chol",
Fructose = "Fru",
LPS = "LPS",
AβO_Cholesterol = "AbO_Chol",
AβO_Fructose = "AbO_Fru",
AβO_LPS = "AbO_LPS",
Cholesterol_LPS = "Chol_LPS",
Fructose_Cholesterol = "Fru_Chol",
Fructose_LPS = "Fru_LPS",
AβO_Cholesterol_LPS = "AbO_Chol_LPS",
AβO_Fru_Chol_LPS = "Ab_F_C_LPS")
# ANOVA
anova <- aov(apoe_pg_ml ~ treatment, data = apoe.assay.protein_reorder_1)
# ANOVA
anova <- aov(apoe_pg_ml ~ treatment, data = apoe.assay.protein_reorder)
# Extract P-value
p_value <- signif(summary(anova)[[1]][["Pr(>F)"]][1],3)
# Contrast with Dunnett
emm_contrasts <- anova %>%
emmeans("treatment") %>%
contrast("trt.vs.ctrl", infer = c(TRUE, TRUE)) %>%
as_tibble() %>%
mutate(p.value.round = insight::format_p(p.value, name = NULL,),
p.value.star = insight::format_p(p.value, name = NULL, stars_only = TRUE))
emm_contrasts_split <- emm_contrasts
## Split string
emm_contrasts_split[c('group1', 'group2')] <- str_split_fixed(emm_contrasts_split$contrast, ' - ', 2)
## Data Summary ##
dt_summary <- apoe.assay.protein_reorder %>%
group_by(treatment) %>%
summarize(mean = mean(apoe_pg_ml),
sd = sd(apoe_pg_ml))
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("ApoE, ","pg/mL")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(790,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 23)) +
ylim(0,800)
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("ApoE, ","pg/mL")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(790,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 23)) +
ylim(0,850)
ggsave(here("figures","apoe_assay","apoe_protein.jpg"), dpi = 300, width = 10, height = 8)
## Packages
if(!any(rownames(installed.packages()) == "pacman")){
install.packages("pacman")
}
pacman::p_load(here,
tidyverse,
multcomp,
multcompView,
DT,
forcats,
ggtext,
pals,
emmeans,
kableExtra,
broom,
insight,
ggpubr,
stringr,
DescTools)
## Load RData
load(here("rdata","cholesterol_tidy.rdata"))
## As Factor and reoder, and assign name rename
chol.assay.protein$treatment <- factor(chol.assay.protein$treatment, levels = c("no_treat", "AbO", "Chol", "Fru","LPS", "AbO_Chol","AbO_Fru", "AbO_LPS", "Chol_LPS", "Fru_Chol","Fru_LPS", "AbO_Chol_LPS","Ab_F_C_LPS"))
## New Dataframe reordered
chol.assay.protein_reorder <- chol.assay.protein[order(chol.assay.protein$treatment), ]
## Assign Names to Levels
levels(chol.assay.protein_reorder$treatment) <- list(Control  = "no_treat",
AβO = "AbO",
Cholesterol = "Chol",
Fructose = "Fru",
LPS = "LPS",
AβO_Cholesterol = "AbO_Chol",
AβO_Fructose = "AbO_Fru",
AβO_LPS = "AbO_LPS",
Cholesterol_LPS = "Chol_LPS",
Fructose_Cholesterol = "Fru_Chol",
Fructose_LPS = "Fru_LPS",
AβO_Cholesterol_LPS = "AbO_Chol_LPS",
AβO_Fru_Chol_LPS = "Ab_F_C_LPS")
# ANOVA
anova <- aov(whole_cell_free_chol_uM ~ treatment, data = chol.assay.protein_reorder)
# Extract P-value
p_value <- signif(summary(anova)[[1]][["Pr(>F)"]][1],3)
# Contrast with Dunnett
emm_contrasts <- anova %>%
emmeans("treatment") %>%
contrast("trt.vs.ctrl", infer = c(TRUE, TRUE)) %>%
as_tibble() %>%
mutate(p.value.round = insight::format_p(p.value, name = NULL,),
p.value.star = insight::format_p(p.value, name = NULL, stars_only = TRUE))
emm_contrasts_split <- emm_contrasts
## Split string
emm_contrasts_split[c('group1', 'group2')] <- str_split_fixed(emm_contrasts_split$contrast, ' - ', 2)
## Data Summary ##
dt_summary <- chol.assay.protein_reorder %>%
group_by(treatment) %>%
summarize(mean = mean(whole_cell_free_chol_uM),
sd = sd(whole_cell_free_chol_uM))
################################## Create Plot ##################################
ggplot() +
geom_bar(data = dt_summary,
aes(y = mean, x = treatment, fill = treatment), stat = "identity", show.legend = FALSE) +
geom_errorbar(data = dt_summary,
aes(
ymin = mean - sd,
ymax = mean + sd,
x = treatment
),
width = 0.1) +
# Color Bar Plot (Discrete)
scale_fill_manual(values=as.vector(kelly(20))) +
labs(x = "Treatment", y = expression(paste("Total Cholesterol Content, ",mu,"M")), subtitle = paste("ANOVA:", " P"," = ", paste0(p_value, collapse = NULL))) +
# letters
stat_pvalue_manual(data = emm_contrasts_split,
y.position = rep(18,12),
label = "p.value.star",
x = "group1",
vjust = 2,
remove.bracket=TRUE,
size = 10) +
theme_classic() +
theme(axis.text = element_text(angle = 90, color = "black"),
text = element_text(size = 25)) +
ylim(0, 18)
dt_summary
dt_summary
datatable(dt_summary, colnames = c("Treatment","Mean","Standard Deviation"))
datatable(dt_summary, colnames = c("Treatment","Mean","Standard Deviation")) %>%
formatRound(columns = c("mean","sd"), digits = 3)
datatable(dt_summary, colnames = c("Treatment","Mean","Standard Deviation")) %>%
formatRound(columns = c("mean","sd"), digits = 2)
datatable(as.data.frame(emm_contrasts), colnames = c("Contrast", "Mean Diff", "SE", "DF"," Lower CI 95%", "Upper CI 95%","T.ratio","P.adjusted","P.rounded","Sig Level"))
datatable(dt_summary, colnames = c("Treatment","Mean","Standard Deviation (SD)")) %>%
formatRound(columns = c("mean","sd"), digits = 2)
library(tidyverse)
library(pheatmap)
library(multcompView) # Multiple comparison
library(ggthemes)
library(forcats) # Rename levels
library(here)
data <- read.csv(here("tidy","qpcr_hmc3.csv"))
pacman::p_load(here,
pheatmap,
tidyverse,
multcomp,
multcompView, # Multiple comparison
ggthemes,
forcats) # Rename levels
gitcreds::gitcreds_set()
usethis::use_git()
usethis::use_github()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)`
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
usethis::use_github()
usethis::use_github()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
usethis::use_github()
usethis::use_github()
